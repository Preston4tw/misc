# -*- mode: ruby -*-
# vi: set ft=ruby :

# Have a separate disk for /home to support destroying/recreating a VM while
# maintaining data in /home. This should be much faster than shared directories
# on MacOS.
homedir = File.expand_path("~") + "/homedir.hdd"
homedirSizeMB = 300 * 1024

Vagrant.configure("2") do |config|
  config.vm.box = "bento/centos-6.8"
  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  config.vm.box_check_update = false

	config.vm.provider "parallels" do |prl|
    prl.cpus = 5
    prl.memory = 20480
    # Parallels tools don't compile against non-standard kernels
		prl.update_guest_tools = false
    # Attach the homedir drive
    unless system("prlctl list -i #{:id} | grep -q #{homedir}")
      prl.customize [
        "set", :id, "--device-add", "hdd", "--image", homedir, "--size", homedirSizeMB, 
      ]
    end
	end

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  config.vm.provision "shell", inline: <<-SHELL
    # TODO: format brand new
    # When the disk already is formatted, mount it at /home
    # TODO: copy the rotated authorized_keys file out first
    echo 'LABEL=homedir /home ext4 defaults 0 2' | sudo tee /etc/fstab
    sudo mount /home
  SHELL
end
